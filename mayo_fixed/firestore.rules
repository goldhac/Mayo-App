rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to read/write
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow authenticated users to read other users for partner linking
      allow read: if request.auth != null;
      
      // Allow authenticated users to update any user for partner linking
      allow write: if request.auth != null;
      
      // Mood entries subcollection - users can read/write/create their own mood entries
      match /moodEntries/{entryId} {
        allow read, write, create: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Sessions collection - users can read/write their own sessions
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.partnerId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      // Messages subcollection - users can read/write/create messages in sessions they participate in
      match /messages/{messageId} {
        allow read, write, create: if request.auth != null;
      }
    }
    
    // CoupleManagement collection - users can read/write their own couple data
    match /coupleManagement/{coupleId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId1 || 
         request.auth.uid == resource.data.userId2);
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.userId1 || 
         request.auth.uid == request.resource.data.userId2);
    }
    
    // PartnerCodes collection - users can read/write their own partner codes
    match /partnerCodes/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to query partnerCodes for partner linking
    match /partnerCodes/{document=**} {
      allow read: if request.auth != null;
    }
    
    // PartnerInvites collection - users can read/write invites where they are sender or receiver
    match /partnerInvites/{inviteId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
    }
    
    // Chats collection - users can read/write chats where they are participants
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        (resource.data.participants != null && request.auth.uid in resource.data.participants);
      allow create: if request.auth != null && 
        (request.resource.data.participants != null && request.auth.uid in request.resource.data.participants);
      
      // Messages subcollection - users can read/write/create messages in chats they participate in
      match /messages/{messageId} {
        allow read, write, create: if request.auth != null;
      }
    }
  }
}